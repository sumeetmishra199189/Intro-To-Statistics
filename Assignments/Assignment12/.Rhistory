library(ggplot2)
library(dplyr)
library(ggpubr)
DFP=read.csv('DFP_WTHH_release.csv', header = TRUE)
#View(DFP)
myvars<-c("presvote16post","house3","weight_DFP","M4A","GREENJOB","WEALTH","MARLEG","ICE","GUNS","POP_1","POP_2","POP_3")
dfp1<-DFP[myvars]
issue_variables=c("M4A","GREENJOB","WEALTH","MARLEG","ICE","GUNS")
#View(dfp1)
dfp1$vote_status <- ifelse(dfp1$presvote16post != 1 & dfp1$house3==1, 1, ifelse(dfp1$presvote16post != 2 & dfp1$house3==2, 2,3))
#dfp1=dfp1%>%filter(dfp1$M4A<6||dfp1$GREENJOB<6||dfp1$WEALTH<6||dfp1$MARLEG<6||dfp1$ICE<6||dfp1$GUNS<6)
dfp1=subset(dfp1,dfp1$M4A!=6|dfp1$GREENJOB!=6|dfp1$WEALTH!=6|dfp1$MARLEG!=6|dfp1$ICE!=6|dfp1$GUNS!=6)
View(dfp1)
dfp10=subset(dfp1,vote_status==c(1,2))
#View(dfp10)
dfp1$vote_status <- ifelse(dfp1$presvote16post != 1 & dfp1$house3==1, 1, ifelse(dfp1$presvote16post != 2 & dfp1$house3==2, 2,3))
#dfp1=dfp1%>%filter(dfp1$M4A<6||dfp1$GREENJOB<6||dfp1$WEALTH<6||dfp1$MARLEG<6||dfp1$ICE<6||dfp1$GUNS<6)
#dfp1=subset(dfp1,dfp1$M4A!=6|dfp1$GREENJOB!=6|dfp1$WEALTH!=6|dfp1$MARLEG!=6|dfp1$ICE!=6|dfp1$GUNS!=6)
dfp1=subset(dfp1,M4A==c(1,2,3,4,5))
dfp1=subset(dfp1,GREENJOB==c(1,2,3,4,5))
dfp1=subset(dfp1,WEALTH==c(1,2,3,4,5))
dfp1=subset(dfp1,MARLEG==c(1,2,3,4,5))
dfp1=subset(dfp1,ICE==c(1,2,3,4,5))
dfp1=subset(dfp1,GUNS==c(1,2,3,4,5))
View(dfp1)
dfp10=subset(dfp1,vote_status==c(1,2))
#View(dfp10)
dfp1$vote_status <- ifelse(dfp1$presvote16post != 1 & dfp1$house3==1, 1, ifelse(dfp1$presvote16post != 2 & dfp1$house3==2, 2,3))
#dfp1=dfp1%>%filter(dfp1$M4A<6||dfp1$GREENJOB<6||dfp1$WEALTH<6||dfp1$MARLEG<6||dfp1$ICE<6||dfp1$GUNS<6)
#dfp1=subset(dfp1,dfp1$M4A!=6|dfp1$GREENJOB!=6|dfp1$WEALTH!=6|dfp1$MARLEG!=6|dfp1$ICE!=6|dfp1$GUNS!=6)
dfp1=subset(dfp1,M4A==c(1,2,3,4,5))
View(dfp1)
dfp1=subset(dfp1,GREENJOB==c(1,2,3,4,5))
dfp1=subset(dfp1,WEALTH==c(1,2,3,4,5))
dfp1=subset(dfp1,MARLEG==c(1,2,3,4,5))
dfp1=subset(dfp1,ICE==c(1,2,3,4,5))
dfp1=subset(dfp1,GUNS==c(1,2,3,4,5))
#View(dfp1)
dfp10=subset(dfp1,vote_status==c(1,2))
#View(dfp10)
dfp1$vote_status <- ifelse(dfp1$presvote16post != 1 & dfp1$house3==1, 1, ifelse(dfp1$presvote16post != 2 & dfp1$house3==2, 2,3))
#dfp1=dfp1%>%filter(dfp1$M4A<6||dfp1$GREENJOB<6||dfp1$WEALTH<6||dfp1$MARLEG<6||dfp1$ICE<6||dfp1$GUNS<6)
#dfp1=subset(dfp1,dfp1$M4A!=6|dfp1$GREENJOB!=6|dfp1$WEALTH!=6|dfp1$MARLEG!=6|dfp1$ICE!=6|dfp1$GUNS!=6)
#View(dfp1)
dfp10=subset(dfp1,vote_status==c(1,2))
#View(dfp10)
m4a=ggplot(dfp10,aes(x=M4A,weight=weight_DFP,fill=factor(vote_status)))+geom_histogram(position="dodge",binwidth=0.5)+theme_bw()+scale_x_continuous(breaks = seq(1, 5)) + scale_fill_manual(values=c( "#56B4E9","#999999"),
name="Swing Voter's Status",
breaks=c("1", "2"),
labels=c("Switch to Democrat", "Switch to Republican"))
greenjob=ggplot(dfp10,aes(x=GREENJOB,weight=weight_DFP,fill=factor(vote_status)))+geom_histogram(position="dodge",binwidth=0.5)+theme_bw()+scale_x_continuous(breaks = seq(1, 5))+ scale_fill_manual(values=c( "#56B4E9","#999999"),
name="Swing Voter's Status",
breaks=c("1", "2"),
labels=c("Switch to Democrat", "Switch to Republican"))
wealth=ggplot(dfp10,aes(x=WEALTH,weight=weight_DFP,fill=factor(vote_status)))+geom_histogram(position="dodge",binwidth=0.5)+theme_bw()+scale_x_continuous(breaks = seq(1, 5))+ scale_fill_manual(values=c( "#56B4E9","#999999"),
name="Swing Voter's Status",
breaks=c("1", "2"),
labels=c("Switch to Democrat", "Switch to Republican"))
marleg=ggplot(dfp10,aes(x=MARLEG,weight=weight_DFP,fill=factor(vote_status)))+geom_histogram(position="dodge",binwidth=0.5)+theme_bw()+scale_x_continuous(breaks = seq(1, 5))+ scale_fill_manual(values=c( "#56B4E9","#999999"),
name="Swing Voter's Status",
breaks=c("1", "2"),
labels=c("Switch to Democrat", "Switch to Republican"))
ice=ggplot(dfp10,aes(x=ICE,weight=weight_DFP,fill=factor(vote_status)))+geom_histogram(position="dodge",binwidth=0.5)+theme_bw()+scale_x_continuous(breaks = seq(1, 5))+ scale_fill_manual(values=c( "#56B4E9","#999999"),
name="Swing Voter's Status",
breaks=c("1", "2"),
labels=c("Switch to Democrat", "Switch to Republican"))
guns=ggplot(dfp10,aes(x=GUNS,weight=weight_DFP,fill=factor(vote_status)))+geom_histogram(position="dodge",binwidth=0.5)+theme_bw()+scale_x_continuous(breaks = seq(1, 5))+ scale_fill_manual(values=c( "#56B4E9","#999999"),
name="Swing Voter's Status",
breaks=c("1", "2"),
labels=c("Switch to Democrat", "Switch to Republican"))
ggarrange(m4a, greenjob, wealth,marleg,ice,guns, ncol = 2, nrow = 3,common.legend = TRUE)
knitr::opts_chunk$set(echo = TRUE)
s_ht = c(69,64,65,63,65,62,65,64,66,59,62)
b_ht = c(71,68,66,67,70,71,70,73,72,65,66)
pp=1-pnorm(70,mean(b_ht),sd(b_ht))
sprintf("The proprtion of all brothers who are atleast 70 inches is %f",pp)
carol_ht=61
slope=cor(s_ht,b_ht) * (sd(b_ht)/sd(s_ht))
intercept=mean(b_ht) - slope * mean(s_ht)
predict.yhat=intercept + slope * carol_ht
sprintf("The height of brother when Carol's height is 61 inches is %f",predict.yhat)
r=cor(s_ht,b_ht)
predict.b=intercept + slope * s_ht
sse=sum((predict.b-b_ht)^2)
pred.error=sqrt(sse/(length(b_ht)-2))
b.pp=1-pnorm(70,predict.yhat,pred.error)
sprintf("The proportion of these brothers who are atleast 70 inches given sister is %f",b.pp)
test1.mean=75
test1.sd=10
test2.mean=64
test2.sd=12
n=33
cor=0.5
jill_test1=80
jill_bstar=cor * (test2.sd/test1.sd)
jill_astar=test2.mean - jill_bstar * test1.mean
jill.predict.y=jill_astar + jill_bstar * jill_test1
print(paste("The predicted test 2 score is",jill.predict.y))
test1.mean=75
test1.sd=10
test2.mean=64
test2.sd=12
n=33
cor=0.5
jill_test1=80
jill_bstar=cor * (test2.sd/test1.sd)
jill_astar=test2.mean - jill_bstar * test1.mean
jill.predict.y=jill_astar + jill_bstar * jill_test1
print(paste("The predicted test 2 score is",jill.predict.y))
pred_error=test2.sd * sqrt(1-cor^2)
prob=1-pnorm(80,jill.predict.y,pred_error)
sprintf("The probability that Jill scores atleast 80 in test 2 is %f",prob)
jack_test2=76
jack_bstar=cor * (test1.sd/test2.sd)
jack_astar=test1.mean - jack_bstar * test2.mean
jack.predict.y=jack_astar + jack_bstar * jack_test2
print(paste("The predicted test 1 score is",jack.predict.y))
jack_test2=76
jack_bstar=cor * (test1.sd/test2.sd)
jack_astar=test1.mean - jack_bstar * test2.mean
jack.predict.y=jack_astar + jack_bstar * jack_test2
print(paste("The predicted test 1 score is",jack.predict.y))
pred.error=test1.sd * sqrt(1-cor^2)
jack.prob=1-pnorm(85,jack.predict.y,pred.error)
sprintf("The probability that Jack should be awarded 85 in Test 1 is %f",jack.prob)
jack_test2=76
jack_bstar=cor * (test1.sd/test2.sd)
jack_astar=test1.mean - jack_bstar * test2.mean
jack.predict.y=jack_astar + jack_bstar * jack_test2
print(paste("The predicted test 1 score is",jack.predict.y))
pred.error=test1.sd * sqrt(1-cor^2)
jack.prob=1-pnorm(85,jack.predict.y,pred.error)
sprintf("The probability Jack scores 85 in Test 1 is %f",jack.prob)
setwd("~/Desktop/2nd_sem/Intro to Stats/Assignments/Assignment12")
bb.wins=read.csv("baseball-wins.txt")
View(bb.wins)
bb.wins=read.csv("baseball-wins.txt",sep="")
View(bb.wins)
y1.wins=bb.wins$year1.wins
prob.y1.wins=1-pnorm(84.5,mean(y1.wins),sd(y1.wins))
sprintf("The probability that a randomly selected team in year 1 wins atleast 84.5 games is %f",prob.y1.wins)
y2.wins=bb.wins$y2.wins
y1wins=95
corr=cor(y1.wins,y2.wins)
y2.wins=bb.wins$year2.wins
y1wins=95
corr=cor(y1.wins,y2.wins)
bstar=corr * (sd(y2.wins)/sd(y1.wins))
astar=mean(y2.wins) - bstar * mean(y1.wins)
predict.wins=astar + bstar * y1wins
print(paste("The predicted wins is",predict.wins))
predy1winserror=sd(y2.wins) * sqrt(1-corr^2)
y1winsprob=1-pnorm(84.5,predict.wins,predy1winserror)
sprintf("The probability that a team that won 95 games one season wins at least 84.5 games the next season is %f",y1winsprob)
y2.wins=bb.wins$year2.wins
y1wins=95
corr=cor(y1.wins,y2.wins)
bstar=corr * (sd(y2.wins)/sd(y1.wins))
astar=mean(y2.wins) - bstar * mean(y1.wins)
predict.wins=astar + bstar * y1wins
print(paste("The predicted wins is",predict.wins))
predy1winserror=sd(y2.wins) * sqrt(1-corr^2)
y1winsprob=1-pnorm(84.5,predict.wins,predy1winserror)
sprintf("The probability that a team won 95 games one season wins at least 84.5 games the next season is %f",y1winsprob)
y2.wins=bb.wins$year2.wins
y1wins=95
corr=cor(y1.wins,y2.wins)
bstar=corr * (sd(y2.wins)/sd(y1.wins))
astar=mean(y2.wins) - bstar * mean(y1.wins)
predict.wins=astar + bstar * y1wins
print(paste("The predicted wins is",predict.wins))
predy1winserror=sd(y2.wins) * sqrt(1-corr^2)
y1winsprob=1-pnorm(84.5,predict.wins,predy1winserror)
sprintf("The probability that a team won 95 games one season wins at least 84.5 games the next season is %f",y1winsprob)
#year2.wins=baseball.wins$year2.wins
y1_wins=75
corr=cor(year1.wins,year2.wins)
#year2.wins=baseball.wins$year2.wins
y1_wins=75
corr=cor(y1.wins,y2.wins)
b.star=corr * (sd(y2.wins)/sd(y1.wins))
a.star=mean(y2.wins) - b.star * mean(year1.wins)
#year2.wins=baseball.wins$year2.wins
y1_wins=75
corr=cor(y1.wins,y2.wins)
b.star=corr * (sd(y2.wins)/sd(y1.wins))
a.star=mean(y2.wins) - b.star * mean(y1.wins)
predictwins=a.star + b.star * y1_wins
print(paste("The predicted wins is",predictwins))
y1_wins=75
corr=cor(y1.wins,y2.wins)
b.star=corr * (sd(y2.wins)/sd(y1.wins))
a.star=mean(y2.wins) - b.star * mean(y1.wins)
predictwins=a.star + b.star * y1_wins
print(paste("The predicted wins is",predictwins))
prederror.wins=sd(y2.wins) * sqrt(1-corr^2)
y1wins.prob=1-pnorm(84.5,predictwins,prederror.wins)
sprintf("The probability that a team that won 75 games one season wins atleast 84.5 games the next season is %f",y1wins.prob)
