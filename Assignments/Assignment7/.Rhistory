library(swirl)
install_from_swirl('Statistical Inference')
swirl()
install_from_swirl('Statistical_Inference')
install_from_swirl('Statistical Inference')
swirl()
33/36
deck
52
4/52
0
12/52
2/12
2/51
1.6*.8
1.6*.8/2
.64
mypdf
integrate(mypdf,0,1.6)
(x^2/4)*1/2
2
sqrt(2)
.64
.64
mypdf
integrate(mypdf,0,1.6)
sqrt(2)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
swirl()
data <- read.csv('/Users/sumeetmishra/Desktop/R_Programing/repdata%2Fdata%2FStormData.csv',header=TRUE,sep=",",stringsAsFactors=FALSE)
str(data)
colnames(data) <- tolower(colnames(data))
data2 <- subset(x=data,
subset=(evtype != "?" &
(injuries > 0 | fatalities > 0 | propdmg > 0 | cropdmg > 0)),
select=c("evtype",
"fatalities",
"injuries",
"propdmg",
"propdmgexp",
"cropdmg",
"cropdmgexp"))
data2$propdmgexp <- toupper(data2$propdmgexp)
data2$cropdmgexp <- toupper(data2$cropdmgexp)
propDmgKey <-  c("\"\"" = 10^0,
"-" = 10^0,
"+" = 10^0,
"0" = 10^0,
"1" = 10^1,
"2" = 10^2,
"3" = 10^3,
"4" = 10^4,
"5" = 10^5,
"6" = 10^6,
"7" = 10^7,
"8" = 10^8,
"9" = 10^9,
"H" = 10^2,
"K" = 10^3,
"M" = 10^6,
"B" = 10^9)
data2$propdmgexp <- propDmgKey[as.character(data2$propdmgexp)]
data2$propdmgexp[is.na(data2$propdmgexp)] <- 10^0
cropDmgKey <-  c("\"\"" = 10^0,
"?" = 10^0,
"0" = 10^0,
"K" = 10^3,
"M" = 10^6,
"B" = 10^9)
data2$cropdmgexp <- cropDmgKey[as.character(data2$cropdmgexp)]
data2$cropdmgexp[is.na(data2$cropdmgexp)] <- 10^0
healthData <- aggregate(cbind(fatalities, injuries) ~ evtype, data=data2, FUN=sum)
##Add total column to healthData
healthData$total <- healthData$fatalities + healthData$injuries
##Remove rows with zero health impact
healthData <- healthData[healthData$total > 0, ]
##Sort health data in descending order
healthData <- healthData[order(healthData$total, decreasing=TRUE), ]
##Re-label the rows
rownames(healthData) <- 1:nrow(healthData)
##Create dataframe of highest health impacting event types and append an "other" event type as a catchall for everything else
healthDataTop <- healthData[1:10, ]
data2$propertyloss <- data2$propdmg * data2$propdmgexp
##Combine cropdmg and cropdmgexp parameters into a single parameter called croploss.
data2$croploss <- data2$cropdmg * data2$cropdmgexp
##Aggregate amount of proploss and croploss per evtype into economicData dataframe
economicData <- aggregate(cbind(propertyloss, croploss) ~ evtype, data=data2, FUN=sum)
##Add total loss column to economicData
economicData$total <- economicData$propertyloss + economicData$croploss
##Remove rows with zero economic impact
economicData <- economicData[economicData$total > 0, ]
##Sort the economy data in descending order
economicData <- economicData[order(economicData$total, decreasing=TRUE), ]
##Re-label the rows
rownames(economicData) <- tolower(rownames(economicData))
##Create dataframe of highest economy impacting event types
economicDataTop <- economicData[1:10, ]
library(reshape2)
library(ggplot2)
##Melt the data
healthDataTopMelt <- melt(healthDataTop, id.vars="evtype")
economicDataTopMelt <- melt(economicDataTop, id.vars="evtype")
##Create chart for health impacts
healthChart <- ggplot(healthDataTopMelt, aes(x=reorder(evtype, -value), y=value))+ geom_bar(stat="identity", aes(fill=variable), position="dodge")+scale_y_sqrt("Frequency Count")+ xlab("Event Type")+theme(axis.text.x = element_text(angle=45, hjust=1))+ggtitle("US Storm Health Impacts")
##Create chart for Economic impacts
economicChart <- ggplot(economicDataTopMelt, aes(x=reorder(evtype, -value), y=value))+geom_bar(stat="identity", aes(fill=variable), position="dodge")+ scale_y_sqrt("Damage Impact [$]") +xlab("Event Type")+ theme(axis.text.x = element_text(angle=45, hjust=1))+ ggtitle("Pareto Chart of Top 10 US Storm Economic Impacts")
print(healthChart)
print(economicChart)
library(rmarkdown)
render('/Users/sumeetmishra/Desktop/R_Programing/Statistical Inference Course Project 1.Rmd','pdf_document')
pnorm(0.95,mean=100,sd=10)
p=pnorm(0.95,mean=100,sd=10)
1-p
ppois(20,lambda=33)
shiny::runApp('Desktop/R_Programing/shinyapp')
x774 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/sample774.dat")
x776 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/test351.dat")
plot(ecdf(x774))
mean(x774)
var=mean(x774^2) - mean(x774)^2
var
var=mean(x774^2) - mean(x774)^2
var
median(x774)
x774 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/sample774.dat")
x776 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/test351.dat")
plot(ecdf(x774))
mean(x774)
var=mean(x774^2) - mean(x774)^2
var
median(x774)
iq=quantile(x774,0.75)-quantile(x774,0.25)
iq
sqrt(var)
sqrt(var)
sqrt(var)/iq
qqnorm(x774)
y <- log(x774)
qqnorm(y)
qqnorm(x776)
x774 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/sample774.dat")
x776 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/test351.dat")
x774
iq=quantile(x774,0.75,type=2)-quantile(x774,0.25,type=2)
iq
sqrt(var)/iq
x774 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/sample774.dat")
x776 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/test351.dat")
x774
plot(ecdf(x774))
mean(x774)
var=mean(x774^2) - mean(x774)^2
var
median(x774)
iq=quantile(x774,0.75,type=2)-quantile(x774,0.25,type=2)
iq
sqrt(var)/iq
iq/sqrt(var)
iq=quantile(x774,0.75)-quantile(x774,0.25)
iq
iq/sqrt(var)
plot(density(data776), main ='Kernel density plot')
plot(density(x776), main ='Kernel density plot')
hist(x776)
1-pnorm(105,100,10/sqrt(20))
EX=(-2*0.3)+(-1*0.6)+(12*0.1)
EX=(-2*0.3)+(-1*0.6)+(12*0.1)
EX
(-2*0.3)+(-1*0.6)+(12*0.1)
-2*0.3+-1*0.6+12*0.1
-2*0.3+-1*0.6+12*0.1
-2*0.3+-1*0.6+12*0.1
-2*0.3+-1*0.6+12*0.1
((-2^2*0.3)+(-1^2*0.6)+(12^2*0.1))-((-2*0.3)+(-1*0.6)+(12*0.1))^2
((-2^2*0.3)+(-1^2*0.6)+(12^2*0.1))-(0)^2
((-2^2*0.3)+(-1^2*0.6)+(12^2*0.1))-(0)^2
((-2^2*0.3)+(-1^2*0.6)+(12^2*0.1))-(0)^2
((-2^2*0.3)+(-1^2*0.6)+(12^2*0.1))-(0)^2
(((-2)^2*0.3)+((-1)^2*0.6)+((12)^2*0.1))-(0)^2
(((-2)^2*0.3)+((-1)^2*0.6)+((12)^2*0.1))-((-2*0.3)+(-1*0.6)+(12*0.1))^2
(((-2)^2*0.3)+((-1)^2*0.6)+((12)^2*0.1))-((-2*0.3)+(-1*0.6)+(12*0.1))^2
(((-2)^2*0.3)+((-1)^2*0.6)+((12)^2*0.1))-((-2*0.3)+(-1*0.6)+(12*0.1))^2
(((-2)^2*0.3)+((-1)^2*0.6)+((12)^2*0.1))-((-2*0.3)+(-1*0.6)+(12*0.1))^2
\barx
\\barx
1-pnorm(0.5,0,sqrt(16.2/100))
setwd("~/Desktop/2nd_sem/Intro to Stats/Assignments/Assignment7")
data=read.csv('Book1.csv', header = TRUE)
data=read.csv('Book1.csv', header = TRUE)
data=read.csv('Book1.csv', header = TRUE)
data=read.xlsx('Book1.xlsx', header = TRUE)
data=read.xlsx2('Book1.xlsx', header = TRUE)
data=read.table('Book1.xlsx', header = TRUE)
library(readxl)
data=read.xlsx2('Book1.xlsx', header = TRUE)
library(xlsx)
library(xlsx2)
library(xlsx2)
#library(xlsx2)
data=read.xlsx('Book1.xlsx',sheetName = "Sheet1", header = TRUE)
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
x774 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/sample774.dat")
x776 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/test351.dat")
x774
plot(ecdf(x774))
mean(x774)
var=mean(x774^2) - mean(x774)^2
var
median(x774)
iq=quantile(x774,0.75)-quantile(x774,0.25)
iq
iq/sqrt(var)
qqnorm(x774)
y <- log(x774)
qqnorm(y)
qqnorm(x776)
plot(density(x776), main ='Kernel density plot')
hist(x776)
1-pnorm(105,100,10/sqrt(20))
(((-2)^2*0.3)+((-1)^2*0.6)+((12)^2*0.1))-((-2*0.3)+(-1*0.6)+(12*0.1))^2
1-pnorm(0.5,0,sqrt(16.2/100))
library(xlsx)
library(xlsx)
#library(xlsx)
data=read.csv('Book2.csv', header = TRUE)
#library(xlsx)
data=read.csv('Book2.csv', header = TRUE)
View(data)
mean(data)
data=read.csv('Book2.csv', header = TRUE)
View(data)
n=sum(data$Number_of_households)
n
n=sum(data$Number_of_households)
mean=sum(data$Number_of_households*data$Household_size)/n
mean
EX^2=sum((data$Number_of_households)^2*data$Household_size)/n
EX2=sum((data$Number_of_households)^2*data$Household_size)/n
var=EX2-(mean)^2
sd=sqrt(var)
sd
EX2=sum((data$Number_of_households)^2*data$Household_size)/n
var=EX2-(mean)^2
sd=sqrt(var)
#sd
var
EX2=sum((data$Number_of_households)^2*data$Household_size)/n
EX2
var=EX2-(mean)^2
sd=sqrt(var)
#sd
#var
EX2=sum((data$Household_size)*data$Number_of_households)/n
EX2
var=EX2-(mean)^2
sd=sqrt(var)
#sd
#var
EX2=sum((data$Household_size)*data$Number_of_households)/n
var=EX2-(mean)^2
sd=sqrt(var)
sd
EX2=sum((data$Household_size)^2*data$Number_of_households)/n
var=EX2-(mean)^2
sd=sqrt(var)
#sd
EX2=sum((data$Household_size)^2*data$Number_of_households)/n
var=EX2-(mean)^2
sd=sqrt(var)
sd
stderror=sd/sqrt(n)
stderror
install.packages("latexpdf")
pnorm(3,2.5,stderror)-pnorm(2,2.5,stderror)
pnorm(0.5,0,stderror)-pnorm(-0.5,0,stderror)
pnorm(0.5,0,stderror)-pnorm(-0.5,0,stderror)
pnorm(0.5,0,stderror)-pnorm(-0.5,0,stderror)
pnorm(0.5,0,stderror)-pnorm(-0.5,0,stderror)
pnorm(0.5,0,stderror)-pnorm(-0.5,1,stderror)
pnorm(0.5,0,stderror)-pnorm(-0.5,0,stderror)
?IQR
?type2
?type
iq=quantile(x774,0.75,type=2)-quantile(x774,0.25,type=2)
iq
iq/sqrt(var)
iq/sqrt(var)
iq/sqrt(var)
iq=quantile(x774,0.75,type=2)-quantile(x774,0.25,type=2)
iq
iq/sqrt(var)
iq/sqrt(var)
x774 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/sample774.dat")
x776 = scan("http://pages.iu.edu/~mtrosset/StatInfeR/Data/test351.dat")
plot(ecdf(x774))
mean(x774)
var=mean(x774^2) - mean(x774)^2
var
median(x774)
iq=quantile(x774,0.75,type=2)-quantile(x774,0.25,type=2)
iq
iq/sqrt(var)
y <- log(x774)
qqnorm(y)
(((-2)^2*0.3)+((-1)^2*0.6)+((12)^2*0.1))-((-2*0.3)+(-1*0.6)+(12*0.1))^2
